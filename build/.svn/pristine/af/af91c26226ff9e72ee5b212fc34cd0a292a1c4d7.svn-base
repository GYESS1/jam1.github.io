OUTPUT_DIR=../output/handlers

SOLIB=libHandlers.so
ALIB=libHandlers.a

SRCS:=${shell find * -type f -name '*.cpp' -print}
INCS:=${patsubst %.cpp, %.hpp, ${SRCS}}
OBJS:=${patsubst %.cpp, ${OUTPUT_DIR}/%.o, ${SRCS}}

.SUFFIXES:
.SUFFIXES: .cpp .hpp .d .hxx .cxx 
.SECONDARY: ${INCS}

CXXFLAGS+=-std=c++14 -g -fPIC -pipe -Wall -pthread

ifdef DEBUG
CXXFLAGS+=-ferror-limit=2 -O0 -fno-omit-frame-pointer -fsanitize=address
else
CXXFLAGS+=-O3
endif

INCDIRS=. ../objects ../output/objects ../output ../src ../build/contrib/DORM/include ../build/include
CXXFLAGS+=${addprefix -I,${INCDIRS}} -isystem /usr/local/include

LDFLAGS=-shared -Wl,-soname,${SOLIB} -Wl,-rpath=output

all: ${OUTPUT_DIR}/../${SOLIB} ${OUTPUT_DIR}/handlers.hxx ${OUTPUT_DIR}/handlers.cxx

clean:
	@echo '--> Cleaning'
	@rm -fr ${OUTPUT_DIR} ${OUTPUT_DIR}/../${SOLIB}


%.hpp: | %.cpp
	@echo '--> Generating initial header $@ from $*.cpp'
	@../build/bin/generate-handler-hpp.pl $*.cpp > $@
	

${OUTPUT_DIR}/%.d: %.hpp %.cpp
	@echo '--> Generating makefile $@ from $<'
	@mkdir -p `dirname $@`
	@echo -n '${OUTPUT_DIR}/' > $@
	@${CXX} ${CXXFLAGS} -MM $< >> $@ || rm $@



ifneq ($(MAKECMDGOALS),clean)
DEPENDS=${patsubst %.cpp, ${OUTPUT_DIR}/%.d, ${SRCS}}
-include ${DEPENDS}
endif


${OUTPUT_DIR}/%.o: %.cpp %.hpp 
	@echo '--> Compiling handler $* from $<' 
	@mkdir -p `dirname $@`
	@${CXX} ${CXXFLAGS} -c -o $@ $<


${OUTPUT_DIR}/../${SOLIB}: ${OBJS}
	@echo '--> Building handlers shared library'
	@mkdir -p `dirname $@`
	@${CXX} ${CXXFLAGS} ${LDFLAGS} -o $@ $^


${OUTPUT_DIR}/../${ALIB}: ${OBJS}
	@echo '--> Building handlers static library'
	@mkdir -p `dirname $@`
	@rm -f $@
	@ar -r $@ ${OBJS}


${OUTPUT_DIR}/handlers.cxx: ${SRCS}
	@echo '--> Making list of handlers'
	@echo -n > $@
	@for handler_path in ${SRCS:.cpp=}; do \
		handler=`echo $$handler_path | sed 's/\//::/g'`; \
		printf 'RegistryHandler::register_handler<%s>( "/%s" );\n' $$handler $$handler_path >> $@; \
	done 
	
${OUTPUT_DIR}/handlers.hxx: ${OUTPUT_DIR}/handlers.cxx
	@echo '--> Generating code for all handlers'
	@echo '#ifndef HANDLERS__HANDLERS_HXX' > $@
	@echo '#define HANDLERS__HANDLERS_HXX' >> $@
	@xargs --version 1>/dev/null 2>&1 || (echo -n ${INCS} | xargs -n 1 -I INC echo '#include "INC"' >> $@)
	@xargs --version 1>/dev/null 2>&1 && (echo -n ${INCS} | xargs -d ' ' -n 1 -I INC echo '#include "INC"' >> $@) || true
	@echo '#endif' >> $@
