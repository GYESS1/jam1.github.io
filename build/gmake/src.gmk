OUTPUT_DIR=../output

.SUFFIXES:
.SUFFIXES: .cpp .hpp .hxx .cxx .o

CXXFLAGS+=-std=c++14 -g -fPIC -pipe -Wall -pthread

ifdef DEBUG
CXXFLAGS+=-ferror-limit=2 -O0 -fno-omit-frame-pointer -fsanitize=address
else
CXXFLAGS+=-O3
endif

OSNAME=${shell uname -s}

INCDIRS=. ../objects ../output/objects ../handlers ../templates ../output ../build/contrib/DORM/include ../build/include
CXXFLAGS+=${addprefix -I,${INCDIRS}} -isystem /usr/local/include

LIBS+=Handlers Templates Objects DomWWW DomUtil DORM mysqlcppconn mysqlclient curl microhttpd gnutls crypto gcrypt
LIBDIRS+=../output ../build/lib ../build/contrib/DORM/lib /usr/local/lib /usr/local/lib/mysql /usr/lib64/mysql

ifeq ( ${OSNAME}, "FreeBSD" )
LIBS+=md
endif

LDFLAGS+=-Wl,-rpath=output:build/lib:build/contrib/DORM/lib:/usr/local/lib


all: ${OUTPUT_DIR}/server


.PHONY: clean
clean: std-clean ${EXTRA_CLEAN}


.PHONY: std-clean
std-clean:
	@echo '--> Cleaning'
	@rm -fr ${OUTPUT_DIR}/server ${OUTPUT_DIR}/src


${OUTPUT_DIR}/src/BaseHandler.o: ${OUTPUT_DIR}/handlers/handlers.cxx


${OUTPUT_DIR}/server: ${OUTPUT_DIR}/libHandlers.so ${OUTPUT_DIR}/src/BaseHandler.o ${OUTPUT_DIR}/src/config.o
	@echo '--> Building server'
	@${CXX} ${CXXFLAGS} ${LDFLAGS} ${addprefix -L,${LIBDIRS}} -o $@ $^ ${addprefix -l,${LIBS}}


${OUTPUT_DIR}/src/%.o: %.cpp 
	@echo '--> Compiling module $@ from $<' 
	@mkdir -p `dirname $@`
	@${CXX} ${CXXFLAGS} -c -o $@ $<
