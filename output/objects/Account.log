Base name: Account
Class name: Account
Table name: Accounts
Stanza: accountID					bigint unsigned not null unique
Column: accountID, matches SQL: bigint unsigned, so CXXTYPE: uint64_t, CONNTYPE: UInt64, NOT_NULL
Navigator to Account (#include Account.hpp) via account()
Stanza: first_seen_when				timestamp not null default current_timestamp
Column: first_seen_when, matches SQL: timestamp, so CXXTYPE: DORM::Timestamp, CONNTYPE: String, NOT_NULL, HAS_DEFAULT
Stanza: reward_recipient			bigint unsigned
Column: reward_recipient, matches SQL: bigint unsigned, so CXXTYPE: uint64_t, CONNTYPE: UInt64
Stanza: last_updated_when			timestamp null default null
Column: last_updated_when, matches SQL: timestamp, so CXXTYPE: DORM::Timestamp, CONNTYPE: String, HAS_DEFAULT
Stanza: account_name				varchar(255)
Column: account_name, matches SQL: varchar, so CXXTYPE: std::string, CONNTYPE: String
Stanza: mining_capacity				bigint unsigned
Column: mining_capacity, matches SQL: bigint unsigned, so CXXTYPE: uint64_t, CONNTYPE: UInt64
Stanza: is_capacity_estimated		boolean
Column: is_capacity_estimated, matches SQL: boolean, so CXXTYPE: bool, CONNTYPE: Boolean
Stanza: account_RS_string			varchar(255) not null
Column: account_RS_string, matches SQL: varchar, so CXXTYPE: std::string, CONNTYPE: String, NOT_NULL
Stanza: has_used_this_pool			boolean not null default false
Column: has_used_this_pool, matches SQL: boolean, so CXXTYPE: bool, CONNTYPE: Boolean, NOT_NULL, HAS_DEFAULT
Stanza: last_checked_at_block		bigint unsigned
Column: last_checked_at_block, matches SQL: bigint unsigned, so CXXTYPE: uint64_t, CONNTYPE: UInt64
Stanza: last_nonce_when				timestamp null default null
Column: last_nonce_when, matches SQL: timestamp, so CXXTYPE: DORM::Timestamp, CONNTYPE: String, HAS_DEFAULT
Stanza: primary key					(accountID)
Found PRIMARY KEY stanza, columns (1): accountID
Removing self-referential navigator account() to Account (us)
Writing template ../build/contrib/DORM/templates/object_.hxx to /tmp/DORM-MhXkqq.cpp
Compiling template /tmp/DORM-MhXkqq.cpp to create /tmp/DORM-MhXkqq.aout
Using template /tmp/DORM-MhXkqq.aout to create ../output/objects/Account_.hxx
Writing template ../build/contrib/DORM/templates/object_.cxx to /tmp/DORM-PyMrsr.cpp
Compiling template /tmp/DORM-PyMrsr.cpp to create /tmp/DORM-PyMrsr.aout
Using template /tmp/DORM-PyMrsr.aout to create ../output/objects/Account_.cxx
